<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ parameter type="System.String" name="package" #>
<#@ parameter type="System.String" name="className" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="imports" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="javaMethods" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="defaultDataInitCode" #>
<#@ parameter type="System.Collections.Generic.List<System.String>" name="convertDates" #>




	// this is a generated file from the "Tool.GenerateJava" project in .Net, please do not edit directly

package <#= package #>;

import com.google.gwt.core.client.JavaScriptObject;
import com.google.gwt.core.client.JsArray;
import tickbox.web.shared.util.JsIterable;
<#
	foreach(var import in imports) {
		#>import <#= import #>;
<#
	}
#>

	// ---- this is a generated file, please do not edit directly -------
public class <#= className #> extends JavaScriptObject implements I<#= className #> {
	protected <#= className #>() {}
	

<#
	foreach(var meth in javaMethods) {
#><#= meth #>
<#
	}
#>



	
	private static final native <#= className #> asObjectRaw(String json) /*-{ var o = eval('(' + json + ')'); return o === null ? o : o.d === undefined ? o : o.d; }-*/;
	public static final <#= className #> asObject(String json) { <#= className #> o = asObjectRaw(json); if (o != null) {o.convertDates();} return o; }
	private static final native JsArray<<#= className #>> asArrayRaw(String json) /*-{ var o = eval('(' + json + ')'); return o === null ? o : o.d === undefined ? o : o.d; }-*/;
	public static final JsArray<<#= className #>> asArray(String json) { JsArray<<#= className #>> l = asArrayRaw(json); for(<#= className #> o : new JsIterable<<#= className #>>(l)) { o.convertDates(); } return l; }

	

	public final void convertDates() {
	<# foreach (var s in convertDates) { #>
		<#= s #>
	<# } #>
		
		
	}
	


	public static final <#= className #> newObj() {
		<#= className #> result = asObject("{d:{}}");
<#
	foreach(var line in defaultDataInitCode) {
#><#= line #>
<#
	}
#>	
				
		return result;
	}

}

