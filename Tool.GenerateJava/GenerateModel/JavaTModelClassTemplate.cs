// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Tool.GenerateJava.GenerateModel
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class JavaTModelClassTemplate : JavaTModelClassTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("\r\n\r\n\t// this is a generated file from the \"Tool.GenerateJava\" project in .Net, pl" +
                    "ease do not edit directly\r\n\r\npackage ");
            
            #line 23 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(package));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\n//*** Start Custom imports ***\r\n");
            
            #line 26 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	foreach(var cc in customImports) {
		
            
            #line default
            #line hidden
            
            #line 28 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cc));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 29 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("//*** End Custom imports ***\r\n\r\nimport ");
            
            #line 33 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dtoPackage));
            
            #line default
            #line hidden
            this.Write(".I");
            
            #line 33 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(";\r\nimport tickbox.web.shared.util.ObjFactory;\r\n");
            
            #line 35 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	foreach(var import in imports) {
		
            
            #line default
            #line hidden
            this.Write("import ");
            
            #line 37 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(import));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 38 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\r\n\r\n\r\n\r\npublic class ");
            
            #line 45 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Tm {\r\n\r\n//*** Start Custom code block ***\r\n");
            
            #line 48 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	foreach(var cc in customCode) {
		
            
            #line default
            #line hidden
            
            #line 50 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cc));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 51 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("//*** End Custom code block ***\r\n\r\n\r\n\tpublic ");
            
            #line 56 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Tm(");
            
            #line 56 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(constructorParams));
            
            #line default
            #line hidden
            this.Write(") {\r\n");
            
            #line 57 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	foreach(var cc in constructorCode) {
		
            
            #line default
            #line hidden
            
            #line 59 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(cc));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 60 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\r\n\t\tinit();\r\n\t}\r\n\t\r\n\r\n\r\n");
            
            #line 69 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	foreach(var p in properties) {
		
            
            #line default
            #line hidden
            
            #line 71 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 72 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\r\n\r\n\r\n\tpublic void setFrom(I");
            
            #line 78 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" dto) {\r\n\t\tif (dto == null) {\r\n\t\t\tdto = ObjFactory.dto()");
            
            #line 80 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relFactoryNamespace));
            
            #line default
            #line hidden
            this.Write(".newI");
            
            #line 80 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("();\r\n\t\t}\r\n\t\t\r\n\r\n\t\tcopy(dto, this);\r\n\t}\r\n\t\r\n\tpublic static void copy(I");
            
            #line 87 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" from, ");
            
            #line 87 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Tm to) {\t\r\n");
            
            #line 88 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	foreach(var p in fromDtoSetStmts) {
		
            
            #line default
            #line hidden
            
            #line 90 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 91 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t}\r\n\t\r\n\r\n\tpublic static ");
            
            #line 97 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Tm fromDto(I");
            
            #line 97 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" dto) {\r\n\t\tif (dto == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t");
            
            #line 101 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Tm result = new ");
            
            #line 101 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("Tm(");
            
            #line 101 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(fromDtoConstrArgs));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\r\n\t\tcopy(dto, result);\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tpublic I");
            
            #line 108 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" toDto() {\r\n\t\tI");
            
            #line 109 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write(" result = ObjFactory.dto()");
            
            #line 109 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(relFactoryNamespace));
            
            #line default
            #line hidden
            this.Write(".newI");
            
            #line 109 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("();\r\n\t\t\r\n");
            
            #line 111 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	foreach(var p in toDtoSetStmts) {
		
            
            #line default
            #line hidden
            
            #line 113 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(p));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 114 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t\t\r\n\t\treturn result;\r\n\t}\r\n\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 1 "D:\Lat Projects\WL_Main\Tool.GenerateJava\GenerateModel\JavaTModelClassTemplate.tt"

private string _packageField;

/// <summary>
/// Access the package parameter of the template.
/// </summary>
private string package
{
    get
    {
        return this._packageField;
    }
}

private string _classNameField;

/// <summary>
/// Access the className parameter of the template.
/// </summary>
private string className
{
    get
    {
        return this._classNameField;
    }
}

private string _dtoPackageField;

/// <summary>
/// Access the dtoPackage parameter of the template.
/// </summary>
private string dtoPackage
{
    get
    {
        return this._dtoPackageField;
    }
}

private global::System.Collections.Generic.List<System.String> _importsField;

/// <summary>
/// Access the imports parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<System.String> imports
{
    get
    {
        return this._importsField;
    }
}

private global::System.Collections.Generic.List<System.String> _propertiesField;

/// <summary>
/// Access the properties parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<System.String> properties
{
    get
    {
        return this._propertiesField;
    }
}

private global::System.Collections.Generic.List<System.String> _customCodeField;

/// <summary>
/// Access the customCode parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<System.String> customCode
{
    get
    {
        return this._customCodeField;
    }
}

private global::System.Collections.Generic.List<System.String> _customImportsField;

/// <summary>
/// Access the customImports parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<System.String> customImports
{
    get
    {
        return this._customImportsField;
    }
}

private global::System.Collections.Generic.List<System.String> _constructorCodeField;

/// <summary>
/// Access the constructorCode parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<System.String> constructorCode
{
    get
    {
        return this._constructorCodeField;
    }
}

private string _constructorParamsField;

/// <summary>
/// Access the constructorParams parameter of the template.
/// </summary>
private string constructorParams
{
    get
    {
        return this._constructorParamsField;
    }
}

private string _fromDtoConstrArgsField;

/// <summary>
/// Access the fromDtoConstrArgs parameter of the template.
/// </summary>
private string fromDtoConstrArgs
{
    get
    {
        return this._fromDtoConstrArgsField;
    }
}

private global::System.Collections.Generic.List<System.String> _fromDtoSetStmtsField;

/// <summary>
/// Access the fromDtoSetStmts parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<System.String> fromDtoSetStmts
{
    get
    {
        return this._fromDtoSetStmtsField;
    }
}

private global::System.Collections.Generic.List<System.String> _toDtoSetStmtsField;

/// <summary>
/// Access the toDtoSetStmts parameter of the template.
/// </summary>
private global::System.Collections.Generic.List<System.String> toDtoSetStmts
{
    get
    {
        return this._toDtoSetStmtsField;
    }
}

private string _relFactoryNamespaceField;

/// <summary>
/// Access the relFactoryNamespace parameter of the template.
/// </summary>
private string relFactoryNamespace
{
    get
    {
        return this._relFactoryNamespaceField;
    }
}


/// <summary>
/// Initialize the template
/// </summary>
public virtual void Initialize()
{
    if ((this.Errors.HasErrors == false))
    {
bool packageValueAcquired = false;
if (this.Session.ContainsKey("package"))
{
    this._packageField = ((string)(this.Session["package"]));
    packageValueAcquired = true;
}
if ((packageValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("package");
    if ((data != null))
    {
        this._packageField = ((string)(data));
    }
}
bool classNameValueAcquired = false;
if (this.Session.ContainsKey("className"))
{
    this._classNameField = ((string)(this.Session["className"]));
    classNameValueAcquired = true;
}
if ((classNameValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("className");
    if ((data != null))
    {
        this._classNameField = ((string)(data));
    }
}
bool dtoPackageValueAcquired = false;
if (this.Session.ContainsKey("dtoPackage"))
{
    this._dtoPackageField = ((string)(this.Session["dtoPackage"]));
    dtoPackageValueAcquired = true;
}
if ((dtoPackageValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("dtoPackage");
    if ((data != null))
    {
        this._dtoPackageField = ((string)(data));
    }
}
bool importsValueAcquired = false;
if (this.Session.ContainsKey("imports"))
{
    this._importsField = ((global::System.Collections.Generic.List<System.String>)(this.Session["imports"]));
    importsValueAcquired = true;
}
if ((importsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("imports");
    if ((data != null))
    {
        this._importsField = ((global::System.Collections.Generic.List<System.String>)(data));
    }
}
bool propertiesValueAcquired = false;
if (this.Session.ContainsKey("properties"))
{
    this._propertiesField = ((global::System.Collections.Generic.List<System.String>)(this.Session["properties"]));
    propertiesValueAcquired = true;
}
if ((propertiesValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("properties");
    if ((data != null))
    {
        this._propertiesField = ((global::System.Collections.Generic.List<System.String>)(data));
    }
}
bool customCodeValueAcquired = false;
if (this.Session.ContainsKey("customCode"))
{
    this._customCodeField = ((global::System.Collections.Generic.List<System.String>)(this.Session["customCode"]));
    customCodeValueAcquired = true;
}
if ((customCodeValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("customCode");
    if ((data != null))
    {
        this._customCodeField = ((global::System.Collections.Generic.List<System.String>)(data));
    }
}
bool customImportsValueAcquired = false;
if (this.Session.ContainsKey("customImports"))
{
    this._customImportsField = ((global::System.Collections.Generic.List<System.String>)(this.Session["customImports"]));
    customImportsValueAcquired = true;
}
if ((customImportsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("customImports");
    if ((data != null))
    {
        this._customImportsField = ((global::System.Collections.Generic.List<System.String>)(data));
    }
}
bool constructorCodeValueAcquired = false;
if (this.Session.ContainsKey("constructorCode"))
{
    this._constructorCodeField = ((global::System.Collections.Generic.List<System.String>)(this.Session["constructorCode"]));
    constructorCodeValueAcquired = true;
}
if ((constructorCodeValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("constructorCode");
    if ((data != null))
    {
        this._constructorCodeField = ((global::System.Collections.Generic.List<System.String>)(data));
    }
}
bool constructorParamsValueAcquired = false;
if (this.Session.ContainsKey("constructorParams"))
{
    this._constructorParamsField = ((string)(this.Session["constructorParams"]));
    constructorParamsValueAcquired = true;
}
if ((constructorParamsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("constructorParams");
    if ((data != null))
    {
        this._constructorParamsField = ((string)(data));
    }
}
bool fromDtoConstrArgsValueAcquired = false;
if (this.Session.ContainsKey("fromDtoConstrArgs"))
{
    this._fromDtoConstrArgsField = ((string)(this.Session["fromDtoConstrArgs"]));
    fromDtoConstrArgsValueAcquired = true;
}
if ((fromDtoConstrArgsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("fromDtoConstrArgs");
    if ((data != null))
    {
        this._fromDtoConstrArgsField = ((string)(data));
    }
}
bool fromDtoSetStmtsValueAcquired = false;
if (this.Session.ContainsKey("fromDtoSetStmts"))
{
    this._fromDtoSetStmtsField = ((global::System.Collections.Generic.List<System.String>)(this.Session["fromDtoSetStmts"]));
    fromDtoSetStmtsValueAcquired = true;
}
if ((fromDtoSetStmtsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("fromDtoSetStmts");
    if ((data != null))
    {
        this._fromDtoSetStmtsField = ((global::System.Collections.Generic.List<System.String>)(data));
    }
}
bool toDtoSetStmtsValueAcquired = false;
if (this.Session.ContainsKey("toDtoSetStmts"))
{
    this._toDtoSetStmtsField = ((global::System.Collections.Generic.List<System.String>)(this.Session["toDtoSetStmts"]));
    toDtoSetStmtsValueAcquired = true;
}
if ((toDtoSetStmtsValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("toDtoSetStmts");
    if ((data != null))
    {
        this._toDtoSetStmtsField = ((global::System.Collections.Generic.List<System.String>)(data));
    }
}
bool relFactoryNamespaceValueAcquired = false;
if (this.Session.ContainsKey("relFactoryNamespace"))
{
    this._relFactoryNamespaceField = ((string)(this.Session["relFactoryNamespace"]));
    relFactoryNamespaceValueAcquired = true;
}
if ((relFactoryNamespaceValueAcquired == false))
{
    object data = global::System.Runtime.Remoting.Messaging.CallContext.LogicalGetData("relFactoryNamespace");
    if ((data != null))
    {
        this._relFactoryNamespaceField = ((string)(data));
    }
}


    }
}


        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class JavaTModelClassTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
