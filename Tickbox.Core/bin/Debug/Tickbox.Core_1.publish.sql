/*
Deployment script for Tickbox.Core

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Tickbox.Core"
:setvar DefaultFilePrefix "Tickbox.Core"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The table [dbo].[Node] is being dropped and re-created since all non-computed columns within the table have been redefined.
*/

IF EXISTS (select top 1 1 from [dbo].[Node])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping PK__Node__3214EC077F60ED59...';


GO
ALTER TABLE [dbo].[Node] DROP CONSTRAINT [PK__Node__3214EC077F60ED59];


GO
PRINT N'Dropping [dbo].[Node]...';


GO
DROP TABLE [dbo].[Node];


GO
PRINT N'Creating [dbo].[Node]...';


GO
CREATE TABLE [dbo].[Node] (
    [NodeId]              INT           IDENTITY (1, 1) NOT NULL,
    [NodeTitle]           VARCHAR (150) NOT NULL,
    [NodeDesc]            VARCHAR (MAX) NOT NULL,
    [ChildrenMultiSelect] BIT           NOT NULL,
    CONSTRAINT [PK_Node] PRIMARY KEY CLUSTERED ([NodeId] ASC)
);


GO
PRINT N'Creating [dbo].[NodeSpecialism]...';


GO
CREATE TABLE [dbo].[NodeSpecialism] (
    [NodeSpecialismId] INT           IDENTITY (1, 1) NOT NULL,
    [NodeId]           INT           NOT NULL,
    [SpecialismId]     INT           NOT NULL,
    [SequenceOrder]    INT           NOT NULL,
    [Guidelines]       VARCHAR (MAX) NOT NULL,
    [DocumentLink]     VARCHAR (MAX) NOT NULL,
    [IsScaffold]       BIT           NOT NULL,
    CONSTRAINT [PK_NodeSpecilaism] PRIMARY KEY CLUSTERED ([NodeSpecialismId] ASC)
);


GO
PRINT N'Creating [dbo].[Specialism]...';


GO
CREATE TABLE [dbo].[Specialism] (
    [SpecialismId]   INT           IDENTITY (1, 1) NOT NULL,
    [SpecialismDesc] VARCHAR (100) NOT NULL,
    [IsScaffold]     BIT           NOT NULL,
    CONSTRAINT [PK_Specialism] PRIMARY KEY CLUSTERED ([SpecialismId] ASC)
);


GO
PRINT N'Creating [dbo].[Taxonomy]...';


GO
CREATE TABLE [dbo].[Taxonomy] (
    [TaxonomyId] INT           IDENTITY (1, 1) NOT NULL,
    [TemplateId] INT           NOT NULL,
    [Title]      VARCHAR (150) NOT NULL,
    [IsScaffold] BIT           NOT NULL,
    CONSTRAINT [PK_Taxonomy] PRIMARY KEY CLUSTERED ([TaxonomyId] ASC)
);


GO
PRINT N'Creating [dbo].[TaxonomySpecialism]...';


GO
CREATE TABLE [dbo].[TaxonomySpecialism] (
    [TaxonomyId]   INT NOT NULL,
    [SpecialismId] INT NOT NULL,
    CONSTRAINT [PK_TaxnonomySpecialism] PRIMARY KEY CLUSTERED ([TaxonomyId] ASC, [SpecialismId] ASC)
);


GO
PRINT N'Creating [dbo].[Template]...';


GO
CREATE TABLE [dbo].[Template] (
    [TemplateId]   INT           IDENTITY (1, 1) NOT NULL,
    [Name]         VARCHAR (100) NOT NULL,
    [DocumentLink] VARCHAR (MAX) NOT NULL,
    [IsScaffold]   BIT           NOT NULL,
    CONSTRAINT [PK_Template] PRIMARY KEY CLUSTERED ([TemplateId] ASC)
);


GO
PRINT N'Creating [dbo].[TreeNode]...';


GO
CREATE TABLE [dbo].[TreeNode] (
    [TreeNodeId]       INT IDENTITY (1, 1) NOT NULL,
    [TaxonomyId]       INT NOT NULL,
    [ParentTreeNodeId] INT NULL,
    [NodeId]           INT NOT NULL,
    [IsScaffold]       BIT NOT NULL,
    CONSTRAINT [PK_TreeNode] PRIMARY KEY CLUSTERED ([TreeNodeId] ASC)
);


GO
PRINT N'Creating FK_NodeSpecialism_Node...';


GO
ALTER TABLE [dbo].[NodeSpecialism] WITH NOCHECK
    ADD CONSTRAINT [FK_NodeSpecialism_Node] FOREIGN KEY ([NodeId]) REFERENCES [dbo].[Node] ([NodeId]);


GO
PRINT N'Creating FK_NodeSpecialism_Specialism...';


GO
ALTER TABLE [dbo].[NodeSpecialism] WITH NOCHECK
    ADD CONSTRAINT [FK_NodeSpecialism_Specialism] FOREIGN KEY ([SpecialismId]) REFERENCES [dbo].[Specialism] ([SpecialismId]);


GO
PRINT N'Creating FK_Taxonomy_Template...';


GO
ALTER TABLE [dbo].[Taxonomy] WITH NOCHECK
    ADD CONSTRAINT [FK_Taxonomy_Template] FOREIGN KEY ([TemplateId]) REFERENCES [dbo].[Template] ([TemplateId]);


GO
PRINT N'Creating FK_TaxonomySpecialism_Taxonomy...';


GO
ALTER TABLE [dbo].[TaxonomySpecialism] WITH NOCHECK
    ADD CONSTRAINT [FK_TaxonomySpecialism_Taxonomy] FOREIGN KEY ([TaxonomyId]) REFERENCES [dbo].[Taxonomy] ([TaxonomyId]);


GO
PRINT N'Creating FK_TaxonomySpecialism_Specialism...';


GO
ALTER TABLE [dbo].[TaxonomySpecialism] WITH NOCHECK
    ADD CONSTRAINT [FK_TaxonomySpecialism_Specialism] FOREIGN KEY ([SpecialismId]) REFERENCES [dbo].[Specialism] ([SpecialismId]);


GO
PRINT N'Creating FK_TreeNode_Node...';


GO
ALTER TABLE [dbo].[TreeNode] WITH NOCHECK
    ADD CONSTRAINT [FK_TreeNode_Node] FOREIGN KEY ([NodeId]) REFERENCES [dbo].[Node] ([NodeId]);


GO
PRINT N'Creating FK_TreeNode_TreeNode...';


GO
ALTER TABLE [dbo].[TreeNode] WITH NOCHECK
    ADD CONSTRAINT [FK_TreeNode_TreeNode] FOREIGN KEY ([ParentTreeNodeId]) REFERENCES [dbo].[TreeNode] ([TreeNodeId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[NodeSpecialism] WITH CHECK CHECK CONSTRAINT [FK_NodeSpecialism_Node];

ALTER TABLE [dbo].[NodeSpecialism] WITH CHECK CHECK CONSTRAINT [FK_NodeSpecialism_Specialism];

ALTER TABLE [dbo].[Taxonomy] WITH CHECK CHECK CONSTRAINT [FK_Taxonomy_Template];

ALTER TABLE [dbo].[TaxonomySpecialism] WITH CHECK CHECK CONSTRAINT [FK_TaxonomySpecialism_Taxonomy];

ALTER TABLE [dbo].[TaxonomySpecialism] WITH CHECK CHECK CONSTRAINT [FK_TaxonomySpecialism_Specialism];

ALTER TABLE [dbo].[TreeNode] WITH CHECK CHECK CONSTRAINT [FK_TreeNode_Node];

ALTER TABLE [dbo].[TreeNode] WITH CHECK CHECK CONSTRAINT [FK_TreeNode_TreeNode];


GO
PRINT N'Update complete.'
GO
